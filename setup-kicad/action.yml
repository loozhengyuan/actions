name: Set up KiCad
description: |
  Installs KiCad to the runner environment by building from source.

  For more information, see: https://www.kicad.org

inputs:
  version:
    description: Release version of KiCad to be installed (e.g., 8.0.6, 8.0.5)
    required: true

runs:
  using: "composite"

  steps:
    - name: Install build dependencies
      shell: bash
      run: |
        set -e
        echo "Installing KiCad build dependencies..."
        
        # Update package list
        sudo apt-get update
        
        # Install essential build tools
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          ninja-build \
          pkg-config \
          python3 \
          python3-dev \
          python3-wxgtk4.0 \
          python3-pip
        
        # Install KiCad-specific dependencies
        sudo apt-get install -y \
          libboost-all-dev \
          libcairo2-dev \
          libcurl4-openssl-dev \
          libgl1-mesa-dev \
          libglew-dev \
          libglm-dev \
          libgtk-3-dev \
          libngspice0-dev \
          liboce-foundation-dev \
          liboce-ocaf-dev \
          libocct-data-exchange-dev \
          libocct-ocaf-dev \
          libopencascade-dev \
          libssl-dev \
          libwxgtk3.2-dev \
          libzip-dev \
          swig4.0 \
          uuid-dev \
          zlib1g-dev

    - name: Download KiCad source
      shell: bash
      run: |
        set -e
        
        VERSION="${{ inputs.version }}"
        echo "Downloading KiCad source version: $VERSION"
        
        # Validate version format (x.y.z)
        if ! echo "$VERSION" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'; then
          echo "Error: Version must be in x.y.z format (e.g., 8.0.6)"
          exit 1
        fi
        
        # Create build directory
        BUILD_DIR="/tmp/kicad-build"
        mkdir -p "$BUILD_DIR"
        cd "$BUILD_DIR"
        
        # Download source tarball
        SOURCE_URL="https://gitlab.com/kicad/code/kicad/-/archive/${VERSION}/kicad-${VERSION}.tar.gz"
        echo "Downloading from: $SOURCE_URL"
        
        for attempt in 1 2 3; do
          if curl -L --fail -o "kicad-${VERSION}.tar.gz" "$SOURCE_URL"; then
            echo "✓ Download successful on attempt $attempt"
            break
          else
            echo "Download attempt $attempt failed"
            if [ $attempt -eq 3 ]; then
              echo "Error: Failed to download KiCad source after 3 attempts"
              exit 1
            fi
            sleep 2
          fi
        done
        
        # Extract source
        tar -xzf "kicad-${VERSION}.tar.gz"
        mv "kicad-${VERSION}" kicad-source
        
        echo "✓ KiCad source downloaded and extracted"

    - name: Build KiCad from source
      shell: bash
      run: |
        set -e
        
        VERSION="${{ inputs.version }}"
        BUILD_DIR="/tmp/kicad-build"
        SOURCE_DIR="$BUILD_DIR/kicad-source"
        
        cd "$SOURCE_DIR"
        
        # Create build directory
        mkdir -p build
        cd build
        
        echo "Configuring KiCad build..."
        
        # Configure with CMake
        cmake \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr/local \
          -DKICAD_SCRIPTING_WXPYTHON=ON \
          -DKICAD_USE_OCC=ON \
          -DKICAD_SPICE=ON \
          ..
        
        echo "Building KiCad (this may take 30-60 minutes)..."
        
        # Build with ninja (faster than make)
        ninja -j$(nproc)
        
        echo "✓ KiCad build completed"

    - name: Install KiCad
      shell: bash
      run: |
        set -e
        
        BUILD_DIR="/tmp/kicad-build"
        SOURCE_DIR="$BUILD_DIR/kicad-source"
        
        cd "$SOURCE_DIR/build"
        
        echo "Installing KiCad..."
        sudo ninja install
        
        # Update library cache
        sudo ldconfig
        
        # Verify installation
        if command -v kicad-cli >/dev/null 2>&1; then
          kicad-cli --version
          echo "✓ KiCad ${{ inputs.version }} installed successfully from source"
        else
          echo "Error: kicad-cli not accessible after installation"
          exit 1
        fi

    - name: Set up KiCad configuration directories
      shell: bash
      run: |
        set -e
        
        # Get KiCad version for config directory
        if command -v kicad-cli >/dev/null 2>&1; then
          KICAD_VERSION=$(kicad-cli -v 2>/dev/null | head -1 | cut -d . -f 1,2 || echo "8.0")
        else
          echo "Warning: kicad-cli not found, using default version 8.0"
          KICAD_VERSION="8.0"
        fi
        
        CONFIG_DIR="${HOME}/.config/kicad/${KICAD_VERSION}"
        
        echo "Setting up KiCad configuration in: $CONFIG_DIR"
        mkdir -p "$CONFIG_DIR"
        
        # Copy library tables from installation
        TEMPLATE_DIR="/usr/local/share/kicad/template"
        if [ -d "$TEMPLATE_DIR" ] && [ "$(ls -A "$TEMPLATE_DIR"/*-lib-table 2>/dev/null | wc -l)" -gt 0 ]; then
          echo "Found library tables in: $TEMPLATE_DIR"
          cp "$TEMPLATE_DIR"/*-lib-table "$CONFIG_DIR/" 2>/dev/null || true
          echo "✓ Library tables copied successfully"
        else
          echo "Warning: No library tables found to copy"
        fi
        
        # List what was configured
        if [ -d "$CONFIG_DIR" ]; then
          echo "Configuration files in $CONFIG_DIR:"
          ls -la "$CONFIG_DIR/" 2>/dev/null || echo "  (empty directory)"
        fi
        
        echo "✓ KiCad configuration setup completed"

    - name: Clean up build files
      shell: bash
      run: |
        set -e
        
        echo "Cleaning up build files..."
        rm -rf /tmp/kicad-build
        
        echo "✓ Build cleanup completed"
